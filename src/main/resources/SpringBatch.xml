<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">


    <!--

    -->
    <!-- Component scan to find all Spring components -->
    <context:component-scan base-package="com.springbatch.springbatch"/>
    <!-- Data source - connect to a MySQL instance running on the local machine -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@192.168.1.138:1521:orcl"/>
        <property name="username" value="sisp_card"/>
        <property name="password" value="sisp_card"/>
    </bean>


    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>



    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">-->
        <!--<property name="transactionManager" ref="transactionManager"/>-->
    <!--</bean>-->

    <batch:job-repository id="jobRepository"
                          data-source="dataSource"
                          transaction-manager="transactionManager"
                          isolation-level-for-create="READ_COMMITTED"
                          table-prefix="BATCH_"
                          max-varchar-length="1000" />

    <jdbc:initialize-database>
        <jdbc:script location="classpath:sql/schema-drop-oracle10g.sql" />
        <jdbc:script location="classpath:sql/schema-oracle10g.sql" />
    </jdbc:initialize-database>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
        <!-- 将JobLauncher配置成异步执行-->
        <property name="taskExecutor">
            <bean class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
        </property>
    </bean>

    <!--1.1 定义从文件夹获取item-->
    <!--<bean id="productReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">-->
        <!--&lt;!&ndash; <property name="resource" value="file:./sample.csv" /> &ndash;&gt;-->
        <!--<property name="resource" value="classpath:/sample.csv"/>-->
        <!--<property name="linesToSkip" value="1"/>-->

        <!--&lt;!&ndash;行映射&ndash;&gt;-->
        <!--<property name="lineMapper">-->
            <!--<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">-->
                <!--<property name="lineTokenizer">-->
                    <!--<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">-->
                        <!--<property name="names" value="id,firstName,lastName"/>-->
                    <!--</bean>-->
                <!--</property>-->
                <!--<property name="fieldSetMapper">-->
                    <!--<bean class="com.springbatch.springbatch.batch.PeopleFieldSetMapper"/>-->
                <!--</property>-->
            <!--</bean>-->
        <!--</property>-->
    <!--</bean>-->

    <!--1.2 Reader 数据库 cursor-->
    <!--<bean id="productReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--<property name="sql" value="select ID, FIRSTNAME, LASTNAME from people" />-->
        <!--<property name="rowMapper">-->
            <!--<bean class= "com.springbatch.springbatch.batch.CustomerCreditRowMapper" />-->
        <!--</property>-->
        <!---->
    <!--</bean>-->

    <!--1.3 Reader 数据库 分页-->
    <bean id="productReader" class="org.springframework.batch.item.database.JdbcPagingItemReader">
        <property name="dataSource" ref="dataSource" />
        <property name="queryProvider">
            <bean class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
                <property name="selectClause" value="select ID, FIRSTNAME, LASTNAME from people" />
                <property name="sortKey" value="id" />
            </bean>
        </property>

        <property name="pageSize" value="1" />
        <property name="rowMapper" ref="customerMapper" />
    </bean>


    <!--多处理流程
        1. 定义CompositeItemProcessor
        2. 修改JOB配置
    -->
    <bean id="peopleMutiProcessor" class="org.springframework.batch.item.support.CompositeItemProcessor">
        <property name="delegates">
            <list>
                <ref bean="peopleProcessor" />
                <ref bean="peopleFilterProcessor" />
            </list>
        </property>
    </bean>


    <bean id="peopleProcessor" class="com.springbatch.springbatch.batch.PeopleProcess" />
    <bean id="peopleFilterProcessor" class="com.springbatch.springbatch.batch.PeopleFilterProcessor" />
    <bean id="productWriter" class="com.springbatch.springbatch.batch.PeopleWriter"/>
    <bean id="propleListner" class="com.springbatch.springbatch.batch.PeopleListener" />
    <bean id="customerMapper" class="com.springbatch.springbatch.batch.CustomerCreditRowMapper" />
</beans>